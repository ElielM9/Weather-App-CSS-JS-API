const FORM=document.querySelector("#search-form"),result=document.querySelector("#result");function startApp(){eventListeners()}function eventListeners(){FORM.addEventListener("submit",searchWeather)}function searchWeather(e){e.preventDefault();const t=document.querySelector("#city-name").value.trim(),r=document.querySelector("#country-name").value;""!==t&&""!==r?consultApi(t,r):showError("Por favor, ingrese un nombre de ciudad y país válidos.")}function showError(e){const t=e;if(!document.querySelector(".alert")){const e=document.createElement("div");e.textContent=t,e.classList.add("alert","alert--error"),FORM.appendChild(e),setTimeout(()=>{e.remove()},3e3)}}function consultApi(e,t){fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e},${t}&appid=2d143467c2e890d28d6f09fbd953e757`).then(e=>e.json()).then(e=>{clearHTML(),"404"!==e.cod?showWeather(e):showError("Ciudad no encontrada")})}function showWeather(e){const{name:t,main:{temp:r,temp_max:n,temp_min:s},weather:[{description:o,icon:c}]}=e,a=convertKelvinToCelsius(r),i=convertKelvinToCelsius(s),l=convertKelvinToCelsius(n);result.innerHTML=`\n    <h2 class="result__city">${t}, ${e.sys.country}</h2>\n    <p class="result__temperature">${a}&#8451;</p>\n    <img class="result__icon" src="https://openweathermap.org/img/wn/${c}@2x.png" alt="${o}">\n    <p class="result__description">${o}</p>\n    <p class="result__range">Min: ${i} / Max: ${l} &#8451;</p>`}function convertKelvinToCelsius(e){return parseInt(e-273.15)}function clearHTML(){for(;result.firstChild;)result.removeChild(result.firstChild)}window.addEventListener("load",startApp);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiRk9STSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInJlc3VsdCIsInN0YXJ0QXBwIiwiZXZlbnRMaXN0ZW5lcnMiLCJhZGRFdmVudExpc3RlbmVyIiwic2VhcmNoV2VhdGhlciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIkNJVFlfTkFNRSIsInZhbHVlIiwidHJpbSIsIlNFTEVDVEVEX0NPVU5UUlkiLCJjb25zdWx0QXBpIiwic2hvd0Vycm9yIiwibWVzc2FnZSIsIkVSUk9SX01FU1NBR0UiLCJhbGVydERpdiIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImNsYXNzTGlzdCIsImFkZCIsImFwcGVuZENoaWxkIiwic2V0VGltZW91dCIsInJlbW92ZSIsImNpdHlOYW1lIiwiY291bnRyeUNvZGUiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJkYXRhIiwiY2xlYXJIVE1MIiwiY29kIiwic2hvd1dlYXRoZXIiLCJuYW1lIiwibWFpbiIsInRlbXAiLCJ0ZW1wX21heCIsInRlbXBfbWluIiwid2VhdGhlciIsImRlc2NyaXB0aW9uIiwiaWNvbiIsIkNFTENJVVMiLCJjb252ZXJ0S2VsdmluVG9DZWxzaXVzIiwiVEVNUF9NSU4iLCJURU1QX01BWCIsImlubmVySFRNTCIsInN5cyIsImNvdW50cnkiLCJrZWx2aW4iLCJwYXJzZUludCIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsIndpbmRvdyJdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTUEsS0FBT0MsU0FBU0MsY0FBYyxnQkFDOUJDLE9BQVNGLFNBQVNDLGNBQWMsV0FLdEMsU0FBU0UsV0FFUEMsaUJBSUYsU0FBU0EsaUJBQ1BMLEtBQUtNLGlCQUFpQixTQUFVQyxlQUlsQyxTQUFTQSxjQUFjQyxHQUNyQkEsRUFBRUMsaUJBR0YsTUFBTUMsRUFBWVQsU0FBU0MsY0FBYyxjQUFjUyxNQUFNQyxPQUN2REMsRUFBbUJaLFNBQVNDLGNBQWMsaUJBQWlCUyxNQUM3QyxLQUVoQkQsR0FGZ0IsS0FFYUcsRUFPakNDLFdBQVdKLEVBQVdHLEdBTnBCRSxVQUFVLDBEQVVkLFNBQVNBLFVBQVVDLEdBQ2pCLE1BQU1DLEVBQWdCRCxFQUt0QixJQUZzQmYsU0FBU0MsY0FBYyxVQUV6QixDQUVsQixNQUFNZ0IsRUFBV2pCLFNBQVNrQixjQUFjLE9BQ3hDRCxFQUFTRSxZQUFjSCxFQUN2QkMsRUFBU0csVUFBVUMsSUFBSSxRQUFTLGdCQUNoQ3RCLEtBQUt1QixZQUFZTCxHQUdqQk0sV0FBVyxLQUNUTixFQUFTTyxVQUNSLE1BS1AsU0FBU1gsV0FBV1ksRUFBVUMsR0FJNUJDLE1BRlkscURBQXFERixLQUFZQyw0Q0FHMUVFLEtBQU1DLEdBQWFBLEVBQVNDLFFBQzVCRixLQUFNRyxJQUVMQyxZQUdpQixRQUFiRCxFQUFLRSxJQU9UQyxZQUFZSCxHQU5WakIsVUFBVSwwQkFXbEIsU0FBU29CLFlBQVlILEdBQ25CLE1BQU1JLEtBQ0pBLEVBQ0FDLE1BQU1DLEtBQUVBLEVBQUlDLFNBQUVBLEVBQVFDLFNBQUVBLEdBQ3hCQyxVQUFVQyxZQUFFQSxFQUFXQyxLQUFFQSxLQUN2QlgsRUFDRVksRUFBVUMsdUJBQXVCUCxHQUNqQ1EsRUFBV0QsdUJBQXVCTCxHQUNsQ08sRUFBV0YsdUJBQXVCTixHQUV4Q3BDLE9BQU82QyxVQUFZLGtDQUNVWixNQUFTSixFQUFLaUIsSUFBSUMsb0RBQ1pOLHNGQUNrQ0Qsa0JBQXFCRCwyQ0FDdkRBLDRDQUNESSxZQUFtQkMsZ0JBSXZELFNBQVNGLHVCQUF1Qk0sR0FDOUIsT0FBT0MsU0FBU0QsRUFBUyxRQUkzQixTQUFTbEIsWUFDUCxLQUFPOUIsT0FBT2tELFlBQ1psRCxPQUFPbUQsWUFBWW5ELE9BQU9rRCxZQXZHOUJFLE9BQU9qRCxpQkFBaUIsT0FBUUYiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvbnN0YW50ZXNcbmNvbnN0IEZPUk0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjc2VhcmNoLWZvcm1gKTtcbmNvbnN0IHJlc3VsdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNyZXN1bHRgKTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoYGxvYWRgLCBzdGFydEFwcCk7XG5cbi8vIEZ1bmNpw7NuIHBhcmEgaW5pY2lhciBsYSBhcHBcbmZ1bmN0aW9uIHN0YXJ0QXBwKCkge1xuICAvLyBGdW5jaW9uIGRlIGV2ZW50b3NcbiAgZXZlbnRMaXN0ZW5lcnMoKTtcbn1cblxuLy8gRnVuY2nDs24gcGFyYSBtYW5lamFyIGV2ZW50b3NcbmZ1bmN0aW9uIGV2ZW50TGlzdGVuZXJzKCkge1xuICBGT1JNLmFkZEV2ZW50TGlzdGVuZXIoYHN1Ym1pdGAsIHNlYXJjaFdlYXRoZXIpO1xufVxuXG4vLyBGdW5jacOzbiBwYXJhIGJ1c2NhciBlbCBjbGltYVxuZnVuY3Rpb24gc2VhcmNoV2VhdGhlcihlKSB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcblxuICAvLyBWYWxpZGFyIGVsIGZvcm11bGFyaW9cbiAgY29uc3QgQ0lUWV9OQU1FID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI2NpdHktbmFtZWApLnZhbHVlLnRyaW0oKTtcbiAgY29uc3QgU0VMRUNURURfQ09VTlRSWSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNjb3VudHJ5LW5hbWVgKS52YWx1ZTtcbiAgY29uc3QgU1RSSU5HX1ZPSUQgPSBgYDtcblxuICBpZiAoQ0lUWV9OQU1FID09PSBTVFJJTkdfVk9JRCB8fCBTRUxFQ1RFRF9DT1VOVFJZID09PSBTVFJJTkdfVk9JRCkge1xuICAgIHNob3dFcnJvcihgUG9yIGZhdm9yLCBpbmdyZXNlIHVuIG5vbWJyZSBkZSBjaXVkYWQgeSBwYcOtcyB2w6FsaWRvcy5gKTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIENvbnN1bHRhciBsYSBBUElcbiAgY29uc3VsdEFwaShDSVRZX05BTUUsIFNFTEVDVEVEX0NPVU5UUlkpO1xufVxuXG4vLyBGdW5jacOzbiBwYXJhIG1vc3RyYXIgZXJyb3JcbmZ1bmN0aW9uIHNob3dFcnJvcihtZXNzYWdlKSB7XG4gIGNvbnN0IEVSUk9SX01FU1NBR0UgPSBtZXNzYWdlO1xuXG4gIC8vIEVsaW1pbmFyIGFsZXJ0YSBhbnRlcmlvclxuICBjb25zdCBwcmV2aW91c0FsZXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmFsZXJ0YCk7XG5cbiAgaWYgKCFwcmV2aW91c0FsZXJ0KSB7XG4gICAgLy8gTW9zdHJhciBhbGVydGFqXG4gICAgY29uc3QgYWxlcnREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGBkaXZgKTtcbiAgICBhbGVydERpdi50ZXh0Q29udGVudCA9IEVSUk9SX01FU1NBR0U7XG4gICAgYWxlcnREaXYuY2xhc3NMaXN0LmFkZChgYWxlcnRgLCBgYWxlcnQtLWVycm9yYCk7XG4gICAgRk9STS5hcHBlbmRDaGlsZChhbGVydERpdik7XG5cbiAgICAvLyBFbGltaW5hciBhbGVydGEgZGVzcHXDqXMgZGUgMyBzZWd1bmRvc1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgYWxlcnREaXYucmVtb3ZlKCk7XG4gICAgfSwgMzAwMCk7XG4gIH1cbn1cblxuLy8gRnVuY2nDs24gcGFyYSBjb25zdWx0YXIgbGEgQVBJXG5mdW5jdGlvbiBjb25zdWx0QXBpKGNpdHlOYW1lLCBjb3VudHJ5Q29kZSkge1xuICBjb25zdCBBUElfS0VZID0gYDJkMTQzNDY3YzJlODkwZDI4ZDZmMDlmYmQ5NTNlNzU3YDtcbiAgY29uc3QgVVJMID0gYGh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JHtjaXR5TmFtZX0sJHtjb3VudHJ5Q29kZX0mYXBwaWQ9JHtBUElfS0VZfWA7XG5cbiAgZmV0Y2goVVJMKVxuICAgIC50aGVuKChyZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAvLyBMaW1waWFyIEhUTUwgYW50ZXMgZGUgbW9zdHJhciByZXN1bHRhZG9zXG4gICAgICBjbGVhckhUTUwoKTtcblxuICAgICAgLy8gVmFsaWRhciBxdWUgbG9zIHJlc3VsdGFkb3MgZXhpc3RhblxuICAgICAgaWYgKGRhdGEuY29kID09PSBgNDA0YCkge1xuICAgICAgICBzaG93RXJyb3IoYENpdWRhZCBubyBlbmNvbnRyYWRhYCk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBNb3N0cmFyIHJlc3VsdGFkb3MgZW4gZWwgSFRNTFxuICAgICAgc2hvd1dlYXRoZXIoZGF0YSk7XG4gICAgfSk7XG59XG5cbi8vIEZ1bmNpw7NuIHBhcmEgbW9zdHJhciBsb3MgcmVzdWx0YWRvcyBlbiBlbCBIVE1MXG5mdW5jdGlvbiBzaG93V2VhdGhlcihkYXRhKSB7XG4gIGNvbnN0IHtcbiAgICBuYW1lLFxuICAgIG1haW46IHsgdGVtcCwgdGVtcF9tYXgsIHRlbXBfbWluIH0sXG4gICAgd2VhdGhlcjogW3sgZGVzY3JpcHRpb24sIGljb24gfV0sXG4gIH0gPSBkYXRhO1xuICBjb25zdCBDRUxDSVVTID0gY29udmVydEtlbHZpblRvQ2Vsc2l1cyh0ZW1wKTtcbiAgY29uc3QgVEVNUF9NSU4gPSBjb252ZXJ0S2VsdmluVG9DZWxzaXVzKHRlbXBfbWluKTtcbiAgY29uc3QgVEVNUF9NQVggPSBjb252ZXJ0S2VsdmluVG9DZWxzaXVzKHRlbXBfbWF4KTtcblxuICByZXN1bHQuaW5uZXJIVE1MID0gYFxuICAgIDxoMiBjbGFzcz1cInJlc3VsdF9fY2l0eVwiPiR7bmFtZX0sICR7ZGF0YS5zeXMuY291bnRyeX08L2gyPlxuICAgIDxwIGNsYXNzPVwicmVzdWx0X190ZW1wZXJhdHVyZVwiPiR7Q0VMQ0lVU30mIzg0NTE7PC9wPlxuICAgIDxpbWcgY2xhc3M9XCJyZXN1bHRfX2ljb25cIiBzcmM9XCJodHRwczovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtpY29ufUAyeC5wbmdcIiBhbHQ9XCIke2Rlc2NyaXB0aW9ufVwiPlxuICAgIDxwIGNsYXNzPVwicmVzdWx0X19kZXNjcmlwdGlvblwiPiR7ZGVzY3JpcHRpb259PC9wPlxuICAgIDxwIGNsYXNzPVwicmVzdWx0X19yYW5nZVwiPk1pbjogJHtURU1QX01JTn0gLyBNYXg6ICR7VEVNUF9NQVh9ICYjODQ1MTs8L3A+YDtcbn1cblxuLy8gRnVuY2nDs24gcGFyYSBjb252ZXJ0aXIgZGUgS2VsdmluIGEgY2VsY2l1c1xuZnVuY3Rpb24gY29udmVydEtlbHZpblRvQ2Vsc2l1cyhrZWx2aW4pIHtcbiAgcmV0dXJuIHBhcnNlSW50KGtlbHZpbiAtIDI3My4xNSk7XG59XG5cbi8vIEZ1bmNpw7NuIHBhcmEgbGltcGlhciBlbCBIVE1MXG5mdW5jdGlvbiBjbGVhckhUTUwoKSB7XG4gIHdoaWxlIChyZXN1bHQuZmlyc3RDaGlsZCkge1xuICAgIHJlc3VsdC5yZW1vdmVDaGlsZChyZXN1bHQuZmlyc3RDaGlsZCk7XG4gIH1cbn1cbiJdfQ==
